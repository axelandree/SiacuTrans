//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Claro.SIACU.ProxyService.Transac.Service.SIACPost.MigracionControlPostpagoWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ebsMigracionControlPostpagoSB11Binding", Namespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago")]
    public partial class ebsMigracionControlPostpagoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback programarMigracionOperationCompleted;
        
        private System.Threading.SendOrPostCallback realizarMigracionControlPostpagoOperationCompleted;
        
        private System.Threading.SendOrPostCallback procesarMigracionControlPostpagoOperationCompleted;
        
        private System.Threading.SendOrPostCallback relanzarMigracionControlPostpagoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ebsMigracionControlPostpagoService() {
            this.Url = global::Claro.SIACU.ProxyService.Transac.Service.Properties.Settings.Default.Claro_SIACU_ProxyService_Transac_Service_SIACPost_MigracionControlPostpagoWS_ebsMigracionControlPostpagoService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event programarMigracionCompletedEventHandler programarMigracionCompleted;
        
        /// <remarks/>
        public event realizarMigracionControlPostpagoCompletedEventHandler realizarMigracionControlPostpagoCompleted;
        
        /// <remarks/>
        public event procesarMigracionControlPostpagoCompletedEventHandler procesarMigracionControlPostpagoCompleted;
        
        /// <remarks/>
        public event relanzarMigracionControlPostpagoCompletedEventHandler relanzarMigracionControlPostpagoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago/programarMigracion", RequestElementName="programarMigracionRequest", RequestNamespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago", ResponseNamespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("idTransaccion")]
        public string programarMigracion(
                    audiTypeRequest audit, 
                    string coId, 
                    string msisdn, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaProgramacion, 
                    string customerId, 
                    string codigoProducto, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("contrato")] contratoBeanType[] listaContratos, 
                    string tipoServicio, 
                    string flagOccApadece, 
                    string flagNdPcs, 
                    string ndArea, 
                    string ndMotivo, 
                    string ndSubmotivo, 
                    string cacDac, 
                    int cicloFacturacion, 
                    string idTipoCliente, 
                    string numeroDocumento, 
                    string clienteCuenta, 
                    decimal montoPCS, 
                    decimal montoFidelizacion, 
                    string idInteraccion, 
                    string tipoPostpago, 
                    decimal montoApadece, 
                    string flagValidaApadece, 
                    string flagAplicaApadece, 
                    string flagLimiteCredito, 
                    string topeConsumo, 
                    string nroCuenta, 
                    string asesor, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaProgramacionTope, 
                    string tipoTope, 
                    string descripcionTipoTope, 
                    string tipoRegistroTope, 
                    int topeControlConsumo, 
                    string tipoClarify, 
                    string cuentaPadre, 
                    string tipoMigracion, 
                    string nivelCuenta, 
                    string tipoCuenta, 
                    string imsi, 
                    out string codigoRespuesta, 
                    out string mensajeRespuesta) {
            object[] results = this.Invoke("programarMigracion", new object[] {
                        audit,
                        coId,
                        msisdn,
                        fechaProgramacion,
                        customerId,
                        codigoProducto,
                        listaContratos,
                        tipoServicio,
                        flagOccApadece,
                        flagNdPcs,
                        ndArea,
                        ndMotivo,
                        ndSubmotivo,
                        cacDac,
                        cicloFacturacion,
                        idTipoCliente,
                        numeroDocumento,
                        clienteCuenta,
                        montoPCS,
                        montoFidelizacion,
                        idInteraccion,
                        tipoPostpago,
                        montoApadece,
                        flagValidaApadece,
                        flagAplicaApadece,
                        flagLimiteCredito,
                        topeConsumo,
                        nroCuenta,
                        asesor,
                        fechaProgramacionTope,
                        tipoTope,
                        descripcionTipoTope,
                        tipoRegistroTope,
                        topeControlConsumo,
                        tipoClarify,
                        cuentaPadre,
                        tipoMigracion,
                        nivelCuenta,
                        tipoCuenta,
                        imsi});
            codigoRespuesta = ((string)(results[1]));
            mensajeRespuesta = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void programarMigracionAsync(
                    audiTypeRequest audit, 
                    string coId, 
                    string msisdn, 
                    System.DateTime fechaProgramacion, 
                    string customerId, 
                    string codigoProducto, 
                    contratoBeanType[] listaContratos, 
                    string tipoServicio, 
                    string flagOccApadece, 
                    string flagNdPcs, 
                    string ndArea, 
                    string ndMotivo, 
                    string ndSubmotivo, 
                    string cacDac, 
                    int cicloFacturacion, 
                    string idTipoCliente, 
                    string numeroDocumento, 
                    string clienteCuenta, 
                    decimal montoPCS, 
                    decimal montoFidelizacion, 
                    string idInteraccion, 
                    string tipoPostpago, 
                    decimal montoApadece, 
                    string flagValidaApadece, 
                    string flagAplicaApadece, 
                    string flagLimiteCredito, 
                    string topeConsumo, 
                    string nroCuenta, 
                    string asesor, 
                    System.DateTime fechaProgramacionTope, 
                    string tipoTope, 
                    string descripcionTipoTope, 
                    string tipoRegistroTope, 
                    int topeControlConsumo, 
                    string tipoClarify, 
                    string cuentaPadre, 
                    string tipoMigracion, 
                    string nivelCuenta, 
                    string tipoCuenta, 
                    string imsi) {
            this.programarMigracionAsync(audit, coId, msisdn, fechaProgramacion, customerId, codigoProducto, listaContratos, tipoServicio, flagOccApadece, flagNdPcs, ndArea, ndMotivo, ndSubmotivo, cacDac, cicloFacturacion, idTipoCliente, numeroDocumento, clienteCuenta, montoPCS, montoFidelizacion, idInteraccion, tipoPostpago, montoApadece, flagValidaApadece, flagAplicaApadece, flagLimiteCredito, topeConsumo, nroCuenta, asesor, fechaProgramacionTope, tipoTope, descripcionTipoTope, tipoRegistroTope, topeControlConsumo, tipoClarify, cuentaPadre, tipoMigracion, nivelCuenta, tipoCuenta, imsi, null);
        }
        
        /// <remarks/>
        public void programarMigracionAsync(
                    audiTypeRequest audit, 
                    string coId, 
                    string msisdn, 
                    System.DateTime fechaProgramacion, 
                    string customerId, 
                    string codigoProducto, 
                    contratoBeanType[] listaContratos, 
                    string tipoServicio, 
                    string flagOccApadece, 
                    string flagNdPcs, 
                    string ndArea, 
                    string ndMotivo, 
                    string ndSubmotivo, 
                    string cacDac, 
                    int cicloFacturacion, 
                    string idTipoCliente, 
                    string numeroDocumento, 
                    string clienteCuenta, 
                    decimal montoPCS, 
                    decimal montoFidelizacion, 
                    string idInteraccion, 
                    string tipoPostpago, 
                    decimal montoApadece, 
                    string flagValidaApadece, 
                    string flagAplicaApadece, 
                    string flagLimiteCredito, 
                    string topeConsumo, 
                    string nroCuenta, 
                    string asesor, 
                    System.DateTime fechaProgramacionTope, 
                    string tipoTope, 
                    string descripcionTipoTope, 
                    string tipoRegistroTope, 
                    int topeControlConsumo, 
                    string tipoClarify, 
                    string cuentaPadre, 
                    string tipoMigracion, 
                    string nivelCuenta, 
                    string tipoCuenta, 
                    string imsi, 
                    object userState) {
            if ((this.programarMigracionOperationCompleted == null)) {
                this.programarMigracionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprogramarMigracionOperationCompleted);
            }
            this.InvokeAsync("programarMigracion", new object[] {
                        audit,
                        coId,
                        msisdn,
                        fechaProgramacion,
                        customerId,
                        codigoProducto,
                        listaContratos,
                        tipoServicio,
                        flagOccApadece,
                        flagNdPcs,
                        ndArea,
                        ndMotivo,
                        ndSubmotivo,
                        cacDac,
                        cicloFacturacion,
                        idTipoCliente,
                        numeroDocumento,
                        clienteCuenta,
                        montoPCS,
                        montoFidelizacion,
                        idInteraccion,
                        tipoPostpago,
                        montoApadece,
                        flagValidaApadece,
                        flagAplicaApadece,
                        flagLimiteCredito,
                        topeConsumo,
                        nroCuenta,
                        asesor,
                        fechaProgramacionTope,
                        tipoTope,
                        descripcionTipoTope,
                        tipoRegistroTope,
                        topeControlConsumo,
                        tipoClarify,
                        cuentaPadre,
                        tipoMigracion,
                        nivelCuenta,
                        tipoCuenta,
                        imsi}, this.programarMigracionOperationCompleted, userState);
        }
        
        private void OnprogramarMigracionOperationCompleted(object arg) {
            if ((this.programarMigracionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.programarMigracionCompleted(this, new programarMigracionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago/realizarMigracionControlP" +
            "ostpago", RequestElementName="realizarMigracionControlPostpagoRequest", RequestNamespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago", ResponseNamespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("idTransaccion")]
        public string realizarMigracionControlPostpago(
                    audiTypeRequest audit, 
                    string coId, 
                    string msisdn, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaProgramacion, 
                    string customerId, 
                    string codigoProducto, 
                    [System.Xml.Serialization.XmlArrayItemAttribute("contrato")] contratoBeanType[] listaContratos, 
                    string tipoServicio, 
                    string flagOccApadece, 
                    string flagNdPcs, 
                    string ndArea, 
                    string ndMotivo, 
                    string ndSubmotivo, 
                    string cacDac, 
                    int cicloFacturacion, 
                    string idTipoCliente, 
                    string numeroDocumento, 
                    string clienteCuenta, 
                    decimal montoPCS, 
                    decimal montoFidelizacion, 
                    string idInteraccion, 
                    string tipoPostpago, 
                    decimal montoApadece, 
                    string flagValidaApadece, 
                    string flagAplicaApadece, 
                    string flagLimiteCredito, 
                    string topeConsumo, 
                    string nroCuenta, 
                    string asesor, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaProgramacionTope, 
                    string tipoTope, 
                    string descripcionTipoTope, 
                    string tipoRegistroTope, 
                    int topeControlConsumo, 
                    string tipoClarify, 
                    string cuentaPadre, 
                    string tipoMigracion, 
                    string nivelCuenta, 
                    string tipoCuenta, 
                    string imsi, 
                    string fase, 
                    out string codigoRespuesta, 
                    out string mensajeRespuesta) {
            object[] results = this.Invoke("realizarMigracionControlPostpago", new object[] {
                        audit,
                        coId,
                        msisdn,
                        fechaProgramacion,
                        customerId,
                        codigoProducto,
                        listaContratos,
                        tipoServicio,
                        flagOccApadece,
                        flagNdPcs,
                        ndArea,
                        ndMotivo,
                        ndSubmotivo,
                        cacDac,
                        cicloFacturacion,
                        idTipoCliente,
                        numeroDocumento,
                        clienteCuenta,
                        montoPCS,
                        montoFidelizacion,
                        idInteraccion,
                        tipoPostpago,
                        montoApadece,
                        flagValidaApadece,
                        flagAplicaApadece,
                        flagLimiteCredito,
                        topeConsumo,
                        nroCuenta,
                        asesor,
                        fechaProgramacionTope,
                        tipoTope,
                        descripcionTipoTope,
                        tipoRegistroTope,
                        topeControlConsumo,
                        tipoClarify,
                        cuentaPadre,
                        tipoMigracion,
                        nivelCuenta,
                        tipoCuenta,
                        imsi,
                        fase});
            codigoRespuesta = ((string)(results[1]));
            mensajeRespuesta = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void realizarMigracionControlPostpagoAsync(
                    audiTypeRequest audit, 
                    string coId, 
                    string msisdn, 
                    System.DateTime fechaProgramacion, 
                    string customerId, 
                    string codigoProducto, 
                    contratoBeanType[] listaContratos, 
                    string tipoServicio, 
                    string flagOccApadece, 
                    string flagNdPcs, 
                    string ndArea, 
                    string ndMotivo, 
                    string ndSubmotivo, 
                    string cacDac, 
                    int cicloFacturacion, 
                    string idTipoCliente, 
                    string numeroDocumento, 
                    string clienteCuenta, 
                    decimal montoPCS, 
                    decimal montoFidelizacion, 
                    string idInteraccion, 
                    string tipoPostpago, 
                    decimal montoApadece, 
                    string flagValidaApadece, 
                    string flagAplicaApadece, 
                    string flagLimiteCredito, 
                    string topeConsumo, 
                    string nroCuenta, 
                    string asesor, 
                    System.DateTime fechaProgramacionTope, 
                    string tipoTope, 
                    string descripcionTipoTope, 
                    string tipoRegistroTope, 
                    int topeControlConsumo, 
                    string tipoClarify, 
                    string cuentaPadre, 
                    string tipoMigracion, 
                    string nivelCuenta, 
                    string tipoCuenta, 
                    string imsi, 
                    string fase) {
            this.realizarMigracionControlPostpagoAsync(audit, coId, msisdn, fechaProgramacion, customerId, codigoProducto, listaContratos, tipoServicio, flagOccApadece, flagNdPcs, ndArea, ndMotivo, ndSubmotivo, cacDac, cicloFacturacion, idTipoCliente, numeroDocumento, clienteCuenta, montoPCS, montoFidelizacion, idInteraccion, tipoPostpago, montoApadece, flagValidaApadece, flagAplicaApadece, flagLimiteCredito, topeConsumo, nroCuenta, asesor, fechaProgramacionTope, tipoTope, descripcionTipoTope, tipoRegistroTope, topeControlConsumo, tipoClarify, cuentaPadre, tipoMigracion, nivelCuenta, tipoCuenta, imsi, fase, null);
        }
        
        /// <remarks/>
        public void realizarMigracionControlPostpagoAsync(
                    audiTypeRequest audit, 
                    string coId, 
                    string msisdn, 
                    System.DateTime fechaProgramacion, 
                    string customerId, 
                    string codigoProducto, 
                    contratoBeanType[] listaContratos, 
                    string tipoServicio, 
                    string flagOccApadece, 
                    string flagNdPcs, 
                    string ndArea, 
                    string ndMotivo, 
                    string ndSubmotivo, 
                    string cacDac, 
                    int cicloFacturacion, 
                    string idTipoCliente, 
                    string numeroDocumento, 
                    string clienteCuenta, 
                    decimal montoPCS, 
                    decimal montoFidelizacion, 
                    string idInteraccion, 
                    string tipoPostpago, 
                    decimal montoApadece, 
                    string flagValidaApadece, 
                    string flagAplicaApadece, 
                    string flagLimiteCredito, 
                    string topeConsumo, 
                    string nroCuenta, 
                    string asesor, 
                    System.DateTime fechaProgramacionTope, 
                    string tipoTope, 
                    string descripcionTipoTope, 
                    string tipoRegistroTope, 
                    int topeControlConsumo, 
                    string tipoClarify, 
                    string cuentaPadre, 
                    string tipoMigracion, 
                    string nivelCuenta, 
                    string tipoCuenta, 
                    string imsi, 
                    string fase, 
                    object userState) {
            if ((this.realizarMigracionControlPostpagoOperationCompleted == null)) {
                this.realizarMigracionControlPostpagoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrealizarMigracionControlPostpagoOperationCompleted);
            }
            this.InvokeAsync("realizarMigracionControlPostpago", new object[] {
                        audit,
                        coId,
                        msisdn,
                        fechaProgramacion,
                        customerId,
                        codigoProducto,
                        listaContratos,
                        tipoServicio,
                        flagOccApadece,
                        flagNdPcs,
                        ndArea,
                        ndMotivo,
                        ndSubmotivo,
                        cacDac,
                        cicloFacturacion,
                        idTipoCliente,
                        numeroDocumento,
                        clienteCuenta,
                        montoPCS,
                        montoFidelizacion,
                        idInteraccion,
                        tipoPostpago,
                        montoApadece,
                        flagValidaApadece,
                        flagAplicaApadece,
                        flagLimiteCredito,
                        topeConsumo,
                        nroCuenta,
                        asesor,
                        fechaProgramacionTope,
                        tipoTope,
                        descripcionTipoTope,
                        tipoRegistroTope,
                        topeControlConsumo,
                        tipoClarify,
                        cuentaPadre,
                        tipoMigracion,
                        nivelCuenta,
                        tipoCuenta,
                        imsi,
                        fase}, this.realizarMigracionControlPostpagoOperationCompleted, userState);
        }
        
        private void OnrealizarMigracionControlPostpagoOperationCompleted(object arg) {
            if ((this.realizarMigracionControlPostpagoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.realizarMigracionControlPostpagoCompleted(this, new realizarMigracionControlPostpagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago/procesarMigracionControlP" +
            "ostpago", RequestElementName="procesarMigracionControlPostpagoRequest", RequestNamespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void procesarMigracionControlPostpago(audiTypeRequest audit, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaEjecucion) {
            this.Invoke("procesarMigracionControlPostpago", new object[] {
                        audit,
                        fechaEjecucion});
        }
        
        /// <remarks/>
        public void procesarMigracionControlPostpagoAsync(audiTypeRequest audit, System.DateTime fechaEjecucion) {
            this.procesarMigracionControlPostpagoAsync(audit, fechaEjecucion, null);
        }
        
        /// <remarks/>
        public void procesarMigracionControlPostpagoAsync(audiTypeRequest audit, System.DateTime fechaEjecucion, object userState) {
            if ((this.procesarMigracionControlPostpagoOperationCompleted == null)) {
                this.procesarMigracionControlPostpagoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocesarMigracionControlPostpagoOperationCompleted);
            }
            this.InvokeAsync("procesarMigracionControlPostpago", new object[] {
                        audit,
                        fechaEjecucion}, this.procesarMigracionControlPostpagoOperationCompleted, userState);
        }
        
        private void OnprocesarMigracionControlPostpagoOperationCompleted(object arg) {
            if ((this.procesarMigracionControlPostpagoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.procesarMigracionControlPostpagoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago/relanzarMigracionControlP" +
            "ostpago", RequestElementName="relanzarMigracionControlPostpagoRequest", RequestNamespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void relanzarMigracionControlPostpago(audiTypeRequest audit, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fechaEjecucion) {
            this.Invoke("relanzarMigracionControlPostpago", new object[] {
                        audit,
                        fechaEjecucion});
        }
        
        /// <remarks/>
        public void relanzarMigracionControlPostpagoAsync(audiTypeRequest audit, System.DateTime fechaEjecucion) {
            this.relanzarMigracionControlPostpagoAsync(audit, fechaEjecucion, null);
        }
        
        /// <remarks/>
        public void relanzarMigracionControlPostpagoAsync(audiTypeRequest audit, System.DateTime fechaEjecucion, object userState) {
            if ((this.relanzarMigracionControlPostpagoOperationCompleted == null)) {
                this.relanzarMigracionControlPostpagoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrelanzarMigracionControlPostpagoOperationCompleted);
            }
            this.InvokeAsync("relanzarMigracionControlPostpago", new object[] {
                        audit,
                        fechaEjecucion}, this.relanzarMigracionControlPostpagoOperationCompleted, userState);
        }
        
        private void OnrelanzarMigracionControlPostpagoOperationCompleted(object arg) {
            if ((this.relanzarMigracionControlPostpagoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.relanzarMigracionControlPostpagoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago")]
    public partial class audiTypeRequest {
        
        private string idTransaccionField;
        
        private string ipAplicacionField;
        
        private string nombreAplicacionField;
        
        private string usuarioAplicacionField;
        
        /// <remarks/>
        public string idTransaccion {
            get {
                return this.idTransaccionField;
            }
            set {
                this.idTransaccionField = value;
            }
        }
        
        /// <remarks/>
        public string ipAplicacion {
            get {
                return this.ipAplicacionField;
            }
            set {
                this.ipAplicacionField = value;
            }
        }
        
        /// <remarks/>
        public string nombreAplicacion {
            get {
                return this.nombreAplicacionField;
            }
            set {
                this.nombreAplicacionField = value;
            }
        }
        
        /// <remarks/>
        public string usuarioAplicacion {
            get {
                return this.usuarioAplicacionField;
            }
            set {
                this.usuarioAplicacionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago")]
    public partial class dispositivoBeanType {
        
        private long idDispositivoField;
        
        private int tipoDispositivoField;
        
        /// <remarks/>
        public long idDispositivo {
            get {
                return this.idDispositivoField;
            }
            set {
                this.idDispositivoField = value;
            }
        }
        
        /// <remarks/>
        public int tipoDispositivo {
            get {
                return this.tipoDispositivoField;
            }
            set {
                this.tipoDispositivoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago")]
    public partial class campoBean {
        
        private int indiceField;
        
        private int tipoField;
        
        private string valorField;
        
        /// <remarks/>
        public int indice {
            get {
                return this.indiceField;
            }
            set {
                this.indiceField = value;
            }
        }
        
        /// <remarks/>
        public int tipo {
            get {
                return this.tipoField;
            }
            set {
                this.tipoField = value;
            }
        }
        
        /// <remarks/>
        public string valor {
            get {
                return this.valorField;
            }
            set {
                this.valorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago")]
    public partial class actualizacionContratoBeanType {
        
        private long razonField;
        
        /// <remarks/>
        public long razon {
            get {
                return this.razonField;
            }
            set {
                this.razonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://claro.com.pe/eai/ebs/ws/MigracionControlPostpago")]
    public partial class contratoBeanType {
        
        private long planTarifarioField;
        
        private bool estadoUmbralField;
        
        private actualizacionContratoBeanType actualizacionContratoField;
        
        private campoBean[] informacionContratoField;
        
        private dispositivoBeanType[] listaDispositivosField;
        
        /// <remarks/>
        public long planTarifario {
            get {
                return this.planTarifarioField;
            }
            set {
                this.planTarifarioField = value;
            }
        }
        
        /// <remarks/>
        public bool estadoUmbral {
            get {
                return this.estadoUmbralField;
            }
            set {
                this.estadoUmbralField = value;
            }
        }
        
        /// <remarks/>
        public actualizacionContratoBeanType actualizacionContrato {
            get {
                return this.actualizacionContratoField;
            }
            set {
                this.actualizacionContratoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("listaCampos")]
        public campoBean[] informacionContrato {
            get {
                return this.informacionContratoField;
            }
            set {
                this.informacionContratoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("dispositivo")]
        public dispositivoBeanType[] listaDispositivos {
            get {
                return this.listaDispositivosField;
            }
            set {
                this.listaDispositivosField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void programarMigracionCompletedEventHandler(object sender, programarMigracionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class programarMigracionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal programarMigracionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string codigoRespuesta {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeRespuesta {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void realizarMigracionControlPostpagoCompletedEventHandler(object sender, realizarMigracionControlPostpagoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class realizarMigracionControlPostpagoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal realizarMigracionControlPostpagoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string codigoRespuesta {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string mensajeRespuesta {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void procesarMigracionControlPostpagoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void relanzarMigracionControlPostpagoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591